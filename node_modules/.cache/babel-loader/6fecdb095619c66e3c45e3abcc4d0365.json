{"ast":null,"code":"const {\n  isPlainObject,\n  forceArray,\n  shortLang\n} = require('../utils/utils');\n\nconst validate = require('../helpers/validate');\n\nmodule.exports = buildUrl => (ids, languages, props, format, redirects) => {\n  // Polymorphism: arguments can be passed as an object keys\n  if (isPlainObject(ids)) {\n    ({\n      ids,\n      languages,\n      props,\n      format,\n      redirects\n    } = ids);\n  }\n\n  format = format || 'json'; // ids can't be let empty\n\n  if (!(ids && ids.length > 0)) throw new Error('no id provided'); // Allow to pass ids as a single string\n\n  ids = forceArray(ids);\n  ids.forEach(validate.entityId);\n\n  if (ids.length > 50) {\n    console.warn(`getEntities accepts 50 ids max to match Wikidata API limitations:\n      this request won't get all the desired entities.\n      You can use getManyEntities instead to generate several request urls\n      to work around this limitation`);\n  } // Properties can be either one property as a string\n  // or an array or properties;\n  // either case me just want to deal with arrays\n\n\n  const query = {\n    action: 'wbgetentities',\n    ids: ids.join('|'),\n    format\n  };\n  if (redirects === false) query.redirects = 'no';\n\n  if (languages) {\n    languages = forceArray(languages).map(shortLang);\n    query.languages = languages.join('|');\n  }\n\n  if (props && props.length > 0) query.props = forceArray(props).join('|');\n  return buildUrl(query);\n};","map":{"version":3,"names":["isPlainObject","forceArray","shortLang","require","validate","module","exports","buildUrl","ids","languages","props","format","redirects","length","Error","forEach","entityId","console","warn","query","action","join","map"],"sources":["/Users/aarongmduran/Desktop/tornados/tornados/node_modules/wikibase-sdk/lib/queries/get_entities.js"],"sourcesContent":["const { isPlainObject, forceArray, shortLang } = require('../utils/utils')\nconst validate = require('../helpers/validate')\n\nmodule.exports = buildUrl => (ids, languages, props, format, redirects) => {\n  // Polymorphism: arguments can be passed as an object keys\n  if (isPlainObject(ids)) {\n    ({ ids, languages, props, format, redirects } = ids)\n  }\n\n  format = format || 'json'\n\n  // ids can't be let empty\n  if (!(ids && ids.length > 0)) throw new Error('no id provided')\n\n  // Allow to pass ids as a single string\n  ids = forceArray(ids)\n\n  ids.forEach(validate.entityId)\n\n  if (ids.length > 50) {\n    console.warn(`getEntities accepts 50 ids max to match Wikidata API limitations:\n      this request won't get all the desired entities.\n      You can use getManyEntities instead to generate several request urls\n      to work around this limitation`)\n  }\n\n  // Properties can be either one property as a string\n  // or an array or properties;\n  // either case me just want to deal with arrays\n\n  const query = {\n    action: 'wbgetentities',\n    ids: ids.join('|'),\n    format\n  }\n\n  if (redirects === false) query.redirects = 'no'\n\n  if (languages) {\n    languages = forceArray(languages).map(shortLang)\n    query.languages = languages.join('|')\n  }\n\n  if (props && props.length > 0) query.props = forceArray(props).join('|')\n\n  return buildUrl(query)\n}\n"],"mappings":"AAAA,MAAM;EAAEA,aAAF;EAAiBC,UAAjB;EAA6BC;AAA7B,IAA2CC,OAAO,CAAC,gBAAD,CAAxD;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,qBAAD,CAAxB;;AAEAE,MAAM,CAACC,OAAP,GAAiBC,QAAQ,IAAI,CAACC,GAAD,EAAMC,SAAN,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgCC,SAAhC,KAA8C;EACzE;EACA,IAAIZ,aAAa,CAACQ,GAAD,CAAjB,EAAwB;IACtB,CAAC;MAAEA,GAAF;MAAOC,SAAP;MAAkBC,KAAlB;MAAyBC,MAAzB;MAAiCC;IAAjC,IAA+CJ,GAAhD;EACD;;EAEDG,MAAM,GAAGA,MAAM,IAAI,MAAnB,CANyE,CAQzE;;EACA,IAAI,EAAEH,GAAG,IAAIA,GAAG,CAACK,MAAJ,GAAa,CAAtB,CAAJ,EAA8B,MAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN,CAT2C,CAWzE;;EACAN,GAAG,GAAGP,UAAU,CAACO,GAAD,CAAhB;EAEAA,GAAG,CAACO,OAAJ,CAAYX,QAAQ,CAACY,QAArB;;EAEA,IAAIR,GAAG,CAACK,MAAJ,GAAa,EAAjB,EAAqB;IACnBI,OAAO,CAACC,IAAR,CAAc;AAClB;AACA;AACA,qCAHI;EAID,CArBwE,CAuBzE;EACA;EACA;;;EAEA,MAAMC,KAAK,GAAG;IACZC,MAAM,EAAE,eADI;IAEZZ,GAAG,EAAEA,GAAG,CAACa,IAAJ,CAAS,GAAT,CAFO;IAGZV;EAHY,CAAd;EAMA,IAAIC,SAAS,KAAK,KAAlB,EAAyBO,KAAK,CAACP,SAAN,GAAkB,IAAlB;;EAEzB,IAAIH,SAAJ,EAAe;IACbA,SAAS,GAAGR,UAAU,CAACQ,SAAD,CAAV,CAAsBa,GAAtB,CAA0BpB,SAA1B,CAAZ;IACAiB,KAAK,CAACV,SAAN,GAAkBA,SAAS,CAACY,IAAV,CAAe,GAAf,CAAlB;EACD;;EAED,IAAIX,KAAK,IAAIA,KAAK,CAACG,MAAN,GAAe,CAA5B,EAA+BM,KAAK,CAACT,KAAN,GAAcT,UAAU,CAACS,KAAD,CAAV,CAAkBW,IAAlB,CAAuB,GAAvB,CAAd;EAE/B,OAAOd,QAAQ,CAACY,KAAD,CAAf;AACD,CA3CD"},"metadata":{},"sourceType":"script"}