{"ast":null,"code":"const simplify = require('./simplify');\n\nconst simplifyEntity = (entity, options) => {\n  const {\n    type\n  } = entity;\n  const simplified = {\n    id: entity.id,\n    type,\n    modified: entity.modified\n  };\n  if (entity.datatype) simplified.datatype = entity.datatype;\n\n  if (type === 'item') {\n    simplifyIfDefined(entity, simplified, 'labels');\n    simplifyIfDefined(entity, simplified, 'descriptions');\n    simplifyIfDefined(entity, simplified, 'aliases');\n    simplifyIfDefined(entity, simplified, 'claims', options);\n    simplifyIfDefined(entity, simplified, 'sitelinks', options);\n  } else if (type === 'property') {\n    simplified.datatype = entity.datatype;\n    simplifyIfDefined(entity, simplified, 'labels');\n    simplifyIfDefined(entity, simplified, 'descriptions');\n    simplifyIfDefined(entity, simplified, 'aliases');\n    simplifyIfDefined(entity, simplified, 'claims', options);\n  } else if (type === 'lexeme') {\n    simplifyIfDefined(entity, simplified, 'lemmas');\n    simplified.lexicalCategory = entity.lexicalCategory;\n    simplified.language = entity.language;\n    simplifyIfDefined(entity, simplified, 'claims', options);\n    simplifyIfDefined(entity, simplified, 'forms', options);\n    simplifyIfDefined(entity, simplified, 'senses', options);\n  }\n\n  return simplified;\n};\n\nconst simplifyIfDefined = (entity, simplified, attribute, options) => {\n  if (entity[attribute] != null) {\n    simplified[attribute] = simplify[attribute](entity[attribute], options);\n  }\n};\n\nconst simplifyEntities = function (entities) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (entities.entities) entities = entities.entities;\n  const {\n    entityPrefix\n  } = options;\n  return Object.keys(entities).reduce((obj, key) => {\n    const entity = entities[key];\n    if (entityPrefix) key = `${entityPrefix}:${key}`;\n    obj[key] = simplifyEntity(entity, options);\n    return obj;\n  }, {});\n}; // Set those here instead of in ./simplify to avoid a circular dependency\n\n\nsimplify.entity = simplifyEntity;\nsimplify.entities = simplifyEntities;\nmodule.exports = {\n  simplifyEntity,\n  simplifyEntities\n};","map":{"version":3,"names":["simplify","require","simplifyEntity","entity","options","type","simplified","id","modified","datatype","simplifyIfDefined","lexicalCategory","language","attribute","simplifyEntities","entities","entityPrefix","Object","keys","reduce","obj","key","module","exports"],"sources":["/Users/aarongmduran/Desktop/tornados/tornados/node_modules/wikibase-sdk/lib/helpers/simplify_entity.js"],"sourcesContent":["const simplify = require('./simplify')\n\nconst simplifyEntity = (entity, options) => {\n  const { type } = entity\n  const simplified = {\n    id: entity.id,\n    type,\n    modified: entity.modified\n  }\n\n  if (entity.datatype) simplified.datatype = entity.datatype\n\n  if (type === 'item') {\n    simplifyIfDefined(entity, simplified, 'labels')\n    simplifyIfDefined(entity, simplified, 'descriptions')\n    simplifyIfDefined(entity, simplified, 'aliases')\n    simplifyIfDefined(entity, simplified, 'claims', options)\n    simplifyIfDefined(entity, simplified, 'sitelinks', options)\n  } else if (type === 'property') {\n    simplified.datatype = entity.datatype\n    simplifyIfDefined(entity, simplified, 'labels')\n    simplifyIfDefined(entity, simplified, 'descriptions')\n    simplifyIfDefined(entity, simplified, 'aliases')\n    simplifyIfDefined(entity, simplified, 'claims', options)\n  } else if (type === 'lexeme') {\n    simplifyIfDefined(entity, simplified, 'lemmas')\n    simplified.lexicalCategory = entity.lexicalCategory\n    simplified.language = entity.language\n    simplifyIfDefined(entity, simplified, 'claims', options)\n    simplifyIfDefined(entity, simplified, 'forms', options)\n    simplifyIfDefined(entity, simplified, 'senses', options)\n  }\n\n  return simplified\n}\n\nconst simplifyIfDefined = (entity, simplified, attribute, options) => {\n  if (entity[attribute] != null) {\n    simplified[attribute] = simplify[attribute](entity[attribute], options)\n  }\n}\n\nconst simplifyEntities = (entities, options = {}) => {\n  if (entities.entities) entities = entities.entities\n  const { entityPrefix } = options\n  return Object.keys(entities).reduce((obj, key) => {\n    const entity = entities[key]\n    if (entityPrefix) key = `${entityPrefix}:${key}`\n    obj[key] = simplifyEntity(entity, options)\n    return obj\n  }, {})\n}\n\n// Set those here instead of in ./simplify to avoid a circular dependency\nsimplify.entity = simplifyEntity\nsimplify.entities = simplifyEntities\n\nmodule.exports = { simplifyEntity, simplifyEntities }\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}