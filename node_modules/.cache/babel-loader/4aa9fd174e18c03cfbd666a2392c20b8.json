{"ast":null,"code":"const {\n  fixedEncodeURIComponent,\n  replaceSpaceByUnderscores,\n  isPlainObject\n} = require('../utils/utils');\n\nconst {\n  isPropertyId\n} = require('./helpers');\n\nconst wikidataBase = 'https://www.wikidata.org/wiki/';\n\nconst languages = require('./sitelinks_languages');\n\nconst getSitelinkUrl = (site, title) => {\n  if (isPlainObject(site)) {\n    title = site.title;\n    site = site.site;\n  }\n\n  if (!site) throw new Error('missing a site');\n  if (!title) throw new Error('missing a title');\n  const shortSiteKey = site.replace(/wiki$/, '');\n  const specialUrlBuilder = siteUrlBuilders[shortSiteKey] || siteUrlBuilders[site];\n  if (specialUrlBuilder) return specialUrlBuilder(title);\n  const {\n    lang,\n    project\n  } = getSitelinkData(site);\n  title = fixedEncodeURIComponent(replaceSpaceByUnderscores(title));\n  return `https://${lang}.${project}.org/wiki/${title}`;\n};\n\nconst wikimediaSite = subdomain => title => `https://${subdomain}.wikimedia.org/wiki/${title}`;\n\nconst siteUrlBuilders = {\n  commons: wikimediaSite('commons'),\n  mediawiki: title => `https://www.mediawiki.org/wiki/${title}`,\n  meta: wikimediaSite('meta'),\n  species: wikimediaSite('species'),\n  wikidata: title => {\n    if (isPropertyId(title)) return `${wikidataBase}Property:${title}`;\n    return `${wikidataBase}${title}`;\n  },\n  wikimania: wikimediaSite('wikimania')\n};\nconst sitelinkUrlPattern = /^https?:\\/\\/([\\w-]{2,10})\\.(\\w+)\\.org\\/\\w+\\/(.*)/;\n\nconst getSitelinkData = site => {\n  if (site.startsWith('http')) {\n    const url = site;\n    const matchData = url.match(sitelinkUrlPattern);\n    if (!matchData) throw new Error(`invalid sitelink url: ${url}`);\n    let [lang, project, title] = matchData.slice(1);\n    title = decodeURIComponent(title);\n    let key; // Known case: wikidata, mediawiki\n\n    if (lang === 'www') {\n      lang = 'en';\n      key = project;\n    } else if (lang === 'commons') {\n      lang = 'en';\n      project = key = 'commons';\n    } else {\n      key = `${lang}${project}`.replace('wikipedia', 'wiki');\n    }\n\n    return {\n      lang,\n      project,\n      key,\n      title,\n      url\n    };\n  } else {\n    const key = site;\n    const specialProjectName = specialSites[key];\n    if (specialProjectName) return {\n      lang: 'en',\n      project: specialProjectName,\n      key\n    };\n    const [lang, projectSuffix, rest] = key.split('wik'); // Detecting cases like 'frwikiwiki' that would return [ 'fr', 'i', 'i' ]\n\n    if (rest != null) throw new Error(`invalid sitelink key: ${key}`);\n\n    if (languages.indexOf(lang) === -1) {\n      throw new Error(`sitelink lang not found: ${lang}`);\n    }\n\n    const project = projectsBySuffix[projectSuffix];\n    if (!project) throw new Error(`sitelink project not found: ${project}`);\n    return {\n      lang,\n      project,\n      key\n    };\n  }\n};\n\nconst specialSites = {\n  commonswiki: 'commons',\n  mediawikiwiki: 'mediawiki',\n  metawiki: 'meta',\n  specieswiki: 'specieswiki',\n  wikidatawiki: 'wikidata',\n  wikimaniawiki: 'wikimania'\n};\n\nconst isSitelinkKey = site => {\n  try {\n    // relies on getSitelinkData validation\n    getSitelinkData(site);\n    return true;\n  } catch (err) {\n    return false;\n  }\n};\n\nconst projectsBySuffix = {\n  i: 'wikipedia',\n  isource: 'wikisource',\n  iquote: 'wikiquote',\n  tionary: 'wiktionary',\n  ibooks: 'wikibooks',\n  iversity: 'wikiversity',\n  ivoyage: 'wikivoyage',\n  inews: 'wikinews'\n};\nmodule.exports = {\n  getSitelinkUrl,\n  getSitelinkData,\n  isSitelinkKey\n};","map":{"version":3,"names":["fixedEncodeURIComponent","replaceSpaceByUnderscores","isPlainObject","require","isPropertyId","wikidataBase","languages","getSitelinkUrl","site","title","Error","shortSiteKey","replace","specialUrlBuilder","siteUrlBuilders","lang","project","getSitelinkData","wikimediaSite","subdomain","commons","mediawiki","meta","species","wikidata","wikimania","sitelinkUrlPattern","startsWith","url","matchData","match","slice","decodeURIComponent","key","specialProjectName","specialSites","projectSuffix","rest","split","indexOf","projectsBySuffix","commonswiki","mediawikiwiki","metawiki","specieswiki","wikidatawiki","wikimaniawiki","isSitelinkKey","err","i","isource","iquote","tionary","ibooks","iversity","ivoyage","inews","module","exports"],"sources":["/Users/aarongmduran/Desktop/tornados/tornados/node_modules/wikibase-sdk/lib/helpers/sitelinks.js"],"sourcesContent":["const { fixedEncodeURIComponent, replaceSpaceByUnderscores, isPlainObject } = require('../utils/utils')\nconst { isPropertyId } = require('./helpers')\nconst wikidataBase = 'https://www.wikidata.org/wiki/'\nconst languages = require('./sitelinks_languages')\n\nconst getSitelinkUrl = (site, title) => {\n  if (isPlainObject(site)) {\n    title = site.title\n    site = site.site\n  }\n\n  if (!site) throw new Error('missing a site')\n  if (!title) throw new Error('missing a title')\n\n  const shortSiteKey = site.replace(/wiki$/, '')\n  const specialUrlBuilder = siteUrlBuilders[shortSiteKey] || siteUrlBuilders[site]\n  if (specialUrlBuilder) return specialUrlBuilder(title)\n\n  const { lang, project } = getSitelinkData(site)\n  title = fixedEncodeURIComponent(replaceSpaceByUnderscores(title))\n  return `https://${lang}.${project}.org/wiki/${title}`\n}\n\nconst wikimediaSite = subdomain => title => `https://${subdomain}.wikimedia.org/wiki/${title}`\n\nconst siteUrlBuilders = {\n  commons: wikimediaSite('commons'),\n  mediawiki: title => `https://www.mediawiki.org/wiki/${title}`,\n  meta: wikimediaSite('meta'),\n  species: wikimediaSite('species'),\n  wikidata: title => {\n    if (isPropertyId(title)) return `${wikidataBase}Property:${title}`\n    return `${wikidataBase}${title}`\n  },\n  wikimania: wikimediaSite('wikimania')\n}\n\nconst sitelinkUrlPattern = /^https?:\\/\\/([\\w-]{2,10})\\.(\\w+)\\.org\\/\\w+\\/(.*)/\n\nconst getSitelinkData = site => {\n  if (site.startsWith('http')) {\n    const url = site\n    const matchData = url.match(sitelinkUrlPattern)\n    if (!matchData) throw new Error(`invalid sitelink url: ${url}`)\n    let [ lang, project, title ] = matchData.slice(1)\n    title = decodeURIComponent(title)\n    let key\n    // Known case: wikidata, mediawiki\n    if (lang === 'www') {\n      lang = 'en'\n      key = project\n    } else if (lang === 'commons') {\n      lang = 'en'\n      project = key = 'commons'\n    } else {\n      key = `${lang}${project}`.replace('wikipedia', 'wiki')\n    }\n    return { lang, project, key, title, url }\n  } else {\n    const key = site\n    const specialProjectName = specialSites[key]\n    if (specialProjectName) return { lang: 'en', project: specialProjectName, key }\n\n    const [ lang, projectSuffix, rest ] = key.split('wik')\n\n    // Detecting cases like 'frwikiwiki' that would return [ 'fr', 'i', 'i' ]\n    if (rest != null) throw new Error(`invalid sitelink key: ${key}`)\n\n    if (languages.indexOf(lang) === -1) {\n      throw new Error(`sitelink lang not found: ${lang}`)\n    }\n\n    const project = projectsBySuffix[projectSuffix]\n    if (!project) throw new Error(`sitelink project not found: ${project}`)\n\n    return { lang, project, key }\n  }\n}\n\nconst specialSites = {\n  commonswiki: 'commons',\n  mediawikiwiki: 'mediawiki',\n  metawiki: 'meta',\n  specieswiki: 'specieswiki',\n  wikidatawiki: 'wikidata',\n  wikimaniawiki: 'wikimania'\n}\n\nconst isSitelinkKey = site => {\n  try {\n    // relies on getSitelinkData validation\n    getSitelinkData(site)\n    return true\n  } catch (err) {\n    return false\n  }\n}\n\nconst projectsBySuffix = {\n  i: 'wikipedia',\n  isource: 'wikisource',\n  iquote: 'wikiquote',\n  tionary: 'wiktionary',\n  ibooks: 'wikibooks',\n  iversity: 'wikiversity',\n  ivoyage: 'wikivoyage',\n  inews: 'wikinews'\n}\n\nmodule.exports = { getSitelinkUrl, getSitelinkData, isSitelinkKey }\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}