{"ast":null,"code":"const {\n  forceArray\n} = require('../utils/utils');\n\nconst validate = require('../helpers/validate'); // See https://www.wikidata.org/w/api.php?action=help&modules=query+revisions\n\n\nmodule.exports = buildUrl => function (ids) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  ids = forceArray(ids);\n  ids.forEach(validate.entityPageTitle);\n  const uniqueId = ids.length === 1;\n  const query = {\n    action: 'query',\n    prop: 'revisions'\n  };\n  query.titles = ids.join('|');\n  query.format = options.format || 'json';\n  if (uniqueId) query.rvlimit = options.limit || 'max';\n  if (uniqueId && options.start) query.rvstart = getEpochSeconds(options.start);\n  if (uniqueId && options.end) query.rvend = getEpochSeconds(options.end);\n  const {\n    prop,\n    user,\n    excludeuser,\n    tag\n  } = options;\n\n  if (prop) {\n    query.rvprop = forceArray(prop).join('|');\n  } else {\n    query.rvprop = 'ids|flags|timestamp|user|userid|size|slotsize|sha1|slotsha1|contentmodel|comment|parsedcomment|content|tags|roles|oresscores';\n  }\n\n  query.rvslots = '*';\n  if (user) query.rvuser = user;\n  if (excludeuser) query.rvexcludeuser = excludeuser;\n  if (tag) query.rvtag = tag;\n  return buildUrl(query);\n};\n\nconst getEpochSeconds = date => {\n  // Return already formatted epoch seconds:\n  // if a date in milliseconds appear to be earlier than 2000-01-01, that's probably\n  // already seconds actually\n  if (typeof date === 'number' && date < earliestPointInMs) return date;\n  return Math.trunc(new Date(date).getTime() / 1000);\n};\n\nconst earliestPointInMs = new Date('2000-01-01').getTime();","map":{"version":3,"names":["forceArray","require","validate","module","exports","buildUrl","ids","options","forEach","entityPageTitle","uniqueId","length","query","action","prop","titles","join","format","rvlimit","limit","start","rvstart","getEpochSeconds","end","rvend","user","excludeuser","tag","rvprop","rvslots","rvuser","rvexcludeuser","rvtag","date","earliestPointInMs","Math","trunc","Date","getTime"],"sources":["/Users/aarongmduran/Desktop/tornados/tornados/node_modules/wikibase-sdk/lib/queries/get_revisions.js"],"sourcesContent":["const { forceArray } = require('../utils/utils')\nconst validate = require('../helpers/validate')\n\n// See https://www.wikidata.org/w/api.php?action=help&modules=query+revisions\n\nmodule.exports = buildUrl => (ids, options = {}) => {\n  ids = forceArray(ids)\n  ids.forEach(validate.entityPageTitle)\n\n  const uniqueId = ids.length === 1\n  const query = {\n    action: 'query',\n    prop: 'revisions'\n  }\n\n  query.titles = ids.join('|')\n  query.format = options.format || 'json'\n  if (uniqueId) query.rvlimit = options.limit || 'max'\n  if (uniqueId && options.start) query.rvstart = getEpochSeconds(options.start)\n  if (uniqueId && options.end) query.rvend = getEpochSeconds(options.end)\n\n  const { prop, user, excludeuser, tag } = options\n  if (prop) {\n    query.rvprop = forceArray(prop).join('|')\n  } else {\n    query.rvprop = 'ids|flags|timestamp|user|userid|size|slotsize|sha1|slotsha1|contentmodel|comment|parsedcomment|content|tags|roles|oresscores'\n  }\n  query.rvslots = '*'\n  if (user) query.rvuser = user\n  if (excludeuser) query.rvexcludeuser = excludeuser\n  if (tag) query.rvtag = tag\n\n  return buildUrl(query)\n}\n\nconst getEpochSeconds = date => {\n  // Return already formatted epoch seconds:\n  // if a date in milliseconds appear to be earlier than 2000-01-01, that's probably\n  // already seconds actually\n  if (typeof date === 'number' && date < earliestPointInMs) return date\n  return Math.trunc(new Date(date).getTime() / 1000)\n}\n\nconst earliestPointInMs = new Date('2000-01-01').getTime()\n"],"mappings":"AAAA,MAAM;EAAEA;AAAF,IAAiBC,OAAO,CAAC,gBAAD,CAA9B;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,qBAAD,CAAxB,C,CAEA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBC,QAAQ,IAAI,UAACC,GAAD,EAAuB;EAAA,IAAjBC,OAAiB,uEAAP,EAAO;EAClDD,GAAG,GAAGN,UAAU,CAACM,GAAD,CAAhB;EACAA,GAAG,CAACE,OAAJ,CAAYN,QAAQ,CAACO,eAArB;EAEA,MAAMC,QAAQ,GAAGJ,GAAG,CAACK,MAAJ,KAAe,CAAhC;EACA,MAAMC,KAAK,GAAG;IACZC,MAAM,EAAE,OADI;IAEZC,IAAI,EAAE;EAFM,CAAd;EAKAF,KAAK,CAACG,MAAN,GAAeT,GAAG,CAACU,IAAJ,CAAS,GAAT,CAAf;EACAJ,KAAK,CAACK,MAAN,GAAeV,OAAO,CAACU,MAAR,IAAkB,MAAjC;EACA,IAAIP,QAAJ,EAAcE,KAAK,CAACM,OAAN,GAAgBX,OAAO,CAACY,KAAR,IAAiB,KAAjC;EACd,IAAIT,QAAQ,IAAIH,OAAO,CAACa,KAAxB,EAA+BR,KAAK,CAACS,OAAN,GAAgBC,eAAe,CAACf,OAAO,CAACa,KAAT,CAA/B;EAC/B,IAAIV,QAAQ,IAAIH,OAAO,CAACgB,GAAxB,EAA6BX,KAAK,CAACY,KAAN,GAAcF,eAAe,CAACf,OAAO,CAACgB,GAAT,CAA7B;EAE7B,MAAM;IAAET,IAAF;IAAQW,IAAR;IAAcC,WAAd;IAA2BC;EAA3B,IAAmCpB,OAAzC;;EACA,IAAIO,IAAJ,EAAU;IACRF,KAAK,CAACgB,MAAN,GAAe5B,UAAU,CAACc,IAAD,CAAV,CAAiBE,IAAjB,CAAsB,GAAtB,CAAf;EACD,CAFD,MAEO;IACLJ,KAAK,CAACgB,MAAN,GAAe,8HAAf;EACD;;EACDhB,KAAK,CAACiB,OAAN,GAAgB,GAAhB;EACA,IAAIJ,IAAJ,EAAUb,KAAK,CAACkB,MAAN,GAAeL,IAAf;EACV,IAAIC,WAAJ,EAAiBd,KAAK,CAACmB,aAAN,GAAsBL,WAAtB;EACjB,IAAIC,GAAJ,EAASf,KAAK,CAACoB,KAAN,GAAcL,GAAd;EAET,OAAOtB,QAAQ,CAACO,KAAD,CAAf;AACD,CA5BD;;AA8BA,MAAMU,eAAe,GAAGW,IAAI,IAAI;EAC9B;EACA;EACA;EACA,IAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,GAAGC,iBAAvC,EAA0D,OAAOD,IAAP;EAC1D,OAAOE,IAAI,CAACC,KAAL,CAAW,IAAIC,IAAJ,CAASJ,IAAT,EAAeK,OAAf,KAA2B,IAAtC,CAAP;AACD,CAND;;AAQA,MAAMJ,iBAAiB,GAAG,IAAIG,IAAJ,CAAS,YAAT,EAAuBC,OAAvB,EAA1B"},"metadata":{},"sourceType":"script"}