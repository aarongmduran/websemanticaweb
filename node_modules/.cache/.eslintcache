[{"/Users/aarongmduran/Desktop/tornados/tornados/src/index.js":"1","/Users/aarongmduran/Desktop/tornados/tornados/src/App.js":"2","/Users/aarongmduran/Desktop/tornados/tornados/src/reportWebVitals.js":"3","/Users/aarongmduran/Desktop/tornados/tornados/src/components/navbar/Navbar.jsx":"4","/Users/aarongmduran/Desktop/tornados/tornados/src/routes/tornados.jsx":"5","/Users/aarongmduran/Desktop/tornados/tornados/src/components/tornadoTable/TornadoTable.jsx":"6","/Users/aarongmduran/Desktop/tornados/tornados/src/components/infoModal/InfoModal.jsx":"7"},{"size":705,"mtime":1653686195082,"results":"8","hashOfConfig":"9"},{"size":194,"mtime":1653647854977,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1653141884500,"results":"11","hashOfConfig":"9"},{"size":720,"mtime":1653686211297,"results":"12","hashOfConfig":"9"},{"size":274,"mtime":1653659912544,"results":"13","hashOfConfig":"9"},{"size":6264,"mtime":1653731273512,"results":"14","hashOfConfig":"9"},{"size":2741,"mtime":1653732882386,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},"v7qhyg",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aarongmduran/Desktop/tornados/tornados/src/index.js",["44"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Tornados from './routes/tornados'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={<Tornados />} />\n    </Routes>\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"/Users/aarongmduran/Desktop/tornados/tornados/src/App.js",[],[],[],"/Users/aarongmduran/Desktop/tornados/tornados/src/reportWebVitals.js",[],[],"/Users/aarongmduran/Desktop/tornados/tornados/src/components/navbar/Navbar.jsx",["45"],[],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Navbar(props) {\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            <a className=\"navbar-brand\" href=\"/\">Tornado tracker</a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul className=\"navbar-nav\">\n                </ul>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;","/Users/aarongmduran/Desktop/tornados/tornados/src/routes/tornados.jsx",[],[],[],"/Users/aarongmduran/Desktop/tornados/tornados/src/components/tornadoTable/TornadoTable.jsx",["46","47"],[],"import { useState, useEffect } from 'react';\nimport WBK from 'wikibase-sdk';\nimport InfoModal from '../infoModal/InfoModal';\nimport \"./tornadoTable.css\";\n\nconst wbk = WBK({ instance: 'http://156.35.98.107:8080' })\nconst headers = { 'Accept': 'application/json' };\n\nexport default function TornadoTable(prop) {\n\n    const [allTornados, setAllTornados] = useState([]);\n    const [filteredTornados, setFilteredTornados] = useState([]);\n    const [modalTornado, setModalTornados] = useState('');\n\n    useEffect(() => {\n        setAllTornados([])\n        getAllEntities()\n    }, [])\n\n    useEffect(() => {\n        setFilteredTornados(allTornados)\n    }, [allTornados])\n\n    function getAllEntities() {\n        var url = wbk.searchEntities('Tornado outbreak')\n        fetch(url, { headers }).then(body => {\n            body.json().then(data => {\n                var fetchedTornados = data.search;\n                fetchedTornados.forEach(function (tornado) {\n                    getEntity(tornado.id, tornado.label)\n                });\n            });\n        });\n    }\n\n    function getEntity(id, label) {\n        var url = wbk.getEntities(id)\n        fetch(url, { headers }).then(body => {\n            body.json().then(data => {\n                var aux = data.entities[id].claims\n                var tornado = {}\n                var locationID = aux['P5'][0].mainsnak.datavalue.value.id;\n                var relatedID = aux['P6'][0].mainsnak.datavalue.value.id;\n                var personalID = aux['P7'][0].mainsnak.datavalue.value.id;\n                var materialID = aux['P8'][0].mainsnak.datavalue.value.id;\n                var scaleID = aux['P9'][0].mainsnak.datavalue.value.id;\n                var url = wbk.getManyEntities([scaleID, locationID, relatedID, personalID, materialID]);\n                fetch(url, { headers }).then(body => {\n                    body.json().then(data => {\n                        var location = data.entities[locationID].claims;\n                        var personalDamages = data.entities[personalID].claims;\n                        var materialDamages = data.entities[materialID].claims;\n                        var scale = data.entities[scaleID].labels.en.value;\n                        var url = wbk.getManyEntities([location['P12'][0].mainsnak.datavalue.value.id, location['P13'][0].mainsnak.datavalue.value.id]);\n                        fetch(url, { headers }).then(body => {\n                            body.json().then(data => {\n                                var state = data.entities[location['P12'][0].mainsnak.datavalue.value.id].claims['P10'][0].mainsnak.datavalue.value\n                                var county = data.entities[location['P13'][0].mainsnak.datavalue.value.id].claims['P10'][0].mainsnak.datavalue.value\n                                tornado = {\n                                    title: label,\n                                    width: parseFloat(aux['P1'][0].mainsnak.datavalue.value.amount),\n                                    length: parseFloat(aux['P2'][0].mainsnak.datavalue.value.amount),\n                                    scale,\n                                    location: { state, county },\n                                    personalDamages: { deaths: parseInt(personalDamages['P14'][0].mainsnak.datavalue.value.amount), injuries: parseInt(personalDamages['P15'][0].mainsnak.datavalue.value.amount) },\n                                    materialDamages: { cropDam: parseInt(materialDamages['P23'][0].mainsnak.datavalue.value.amount), propDam: parseInt(materialDamages['P24'][0].mainsnak.datavalue.value.amount) },\n                                    beginDate: aux['P3'][0].mainsnak.datavalue.value,\n                                    endDate: aux['P4'][0].mainsnak.datavalue.value,\n                                    beginCoordinates: { latitude: aux['P27'][0].mainsnak.datavalue.value.latitude, longitude: aux['P27'][0].mainsnak.datavalue.value.longitude },\n                                    endCoordinates: { latitude: aux['P28'][0].mainsnak.datavalue.value.latitude, longitude: aux['P28'][0].mainsnak.datavalue.value.longitude }\n                                }\n                                setAllTornados(allTornados => [...allTornados, tornado]);\n                            })\n                        });\n                    })\n                });\n            });\n        });\n    }\n\n    function openTornado(tornado) {\n        setModalTornados(tornado)\n    }\n\n    function closeTornado() {\n        setModalTornados(false)\n    }\n\n    var tornadosToShow = filteredTornados.map(function (tornado, index) {\n        return (\n            <tr key={index} onClick={() => openTornado(tornado)}>\n                <td>{tornado.scale}</td>\n                <td>{tornado.title}</td>\n                <td>{tornado.location.state}</td>\n                <td>{tornado.location.county}</td>\n            </tr>\n        )\n    })\n\n    function inputChange(value) {\n        var filtered = allTornados.filter(function (tornado) {\n            if (tornado.title.toLowerCase().includes(value.toLowerCase()) > 0 || tornado.location.state.toLowerCase().includes(value.toLowerCase()) > 0 || tornado.location.county.toLowerCase().includes(value.toLowerCase()) > 0 || tornado.scale.toLowerCase().includes(value.toLowerCase()) > 0) {\n                return tornado\n            }\n        })\n        setFilteredTornados(filtered)\n    }\n\n    return (\n        <div>\n            <div className='container col-md-10'>\n                <h1>Tornados</h1>\n                <input type=\"text\" placeholder='Busca por nombre' onChange={event => inputChange(event.target.value)} />\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Escala</th>\n                            <th scope=\"col\">Nombre</th>\n                            <th scope=\"col\">Estado</th>\n                            <th scope=\"col\">Condado</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {tornadosToShow}\n                    </tbody>\n                </table>\n                {modalTornado && <InfoModal tornado={modalTornado} close={closeTornado} />}\n            </div>\n        </div>\n    )\n}",[],"/Users/aarongmduran/Desktop/tornados/tornados/src/components/infoModal/InfoModal.jsx",[],[],{"ruleId":"48","severity":1,"message":"49","line":9,"column":8,"nodeType":"50","messageId":"51","endLine":9,"endColumn":11},{"ruleId":"48","severity":1,"message":"52","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":14},{"ruleId":"53","severity":1,"message":"54","line":18,"column":8,"nodeType":"55","endLine":18,"endColumn":10,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":101,"column":43,"nodeType":"59","messageId":"60","endLine":101,"endColumn":52},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllEntities'. Either include it or remove the dependency array.","ArrayExpression",["61"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd",{"desc":"62","fix":"63"},"Update the dependencies array to be: [getAllEntities]",{"range":"64","text":"65"},[574,576],"[getAllEntities]"]